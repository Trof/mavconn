/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _camera_image_message_t_h
#define _camera_image_message_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _camera_image_message_t camera_image_message_t;
struct _camera_image_message_t
{
    int64_t    utime;
    char*      camera_name;
    float      camera_params[4];
    int32_t    roi_x;
    int32_t    roi_y;
    int32_t    roi_width;
    int32_t    roi_height;
    int64_t    jpeg_size;
    int8_t     *jpeg_image_data;
    double     camera_pose[6];
};
 
camera_image_message_t   *camera_image_message_t_copy(const camera_image_message_t *p);
void camera_image_message_t_destroy(camera_image_message_t *p);

typedef struct _camera_image_message_t_subscription_t camera_image_message_t_subscription_t;
typedef void(*camera_image_message_t_handler_t)(const lcm_recv_buf_t *rbuf, 
             const char *channel, const camera_image_message_t *msg, void *user);

int camera_image_message_t_publish(lcm_t *lcm, const char *channel, const camera_image_message_t *p);
camera_image_message_t_subscription_t* camera_image_message_t_subscribe(lcm_t *lcm, const char *channel, camera_image_message_t_handler_t f, void *userdata);
int camera_image_message_t_unsubscribe(lcm_t *lcm, camera_image_message_t_subscription_t* hid);

int  camera_image_message_t_encode(void *buf, int offset, int maxlen, const camera_image_message_t *p);
int  camera_image_message_t_decode(const void *buf, int offset, int maxlen, camera_image_message_t *p);
int  camera_image_message_t_decode_cleanup(camera_image_message_t *p);
int  camera_image_message_t_encoded_size(const camera_image_message_t *p);

// LCM support functions. Users should not call these
int64_t __camera_image_message_t_get_hash(void);
int64_t __camera_image_message_t_hash_recursive(const __lcm_hash_ptr *p);
int     __camera_image_message_t_encode_array(void *buf, int offset, int maxlen, const camera_image_message_t *p, int elements);
int     __camera_image_message_t_decode_array(const void *buf, int offset, int maxlen, camera_image_message_t *p, int elements);
int     __camera_image_message_t_decode_array_cleanup(camera_image_message_t *p, int elements);
int     __camera_image_message_t_encoded_array_size(const camera_image_message_t *p, int elements);
int     __camera_image_message_t_clone_array(const camera_image_message_t *p, camera_image_message_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
